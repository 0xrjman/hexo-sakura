{"meta":{"title":"RJman's Blog","subtitle":null,"description":"哟,来啦！","author":"RJman","url":"https://306714577.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"about/index.html","permalink":"https://306714577.github.io/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... function bot_ui_ini() { var botui = new BotUI(\"hello-mashiro\"); botui.message.add({ delay: 800, content: \"Hi, there111👋\" }).then(function () { botui.message.add({ delay: 1100, content: \"这里是 Mashiro\" }).then(function () { botui.message.add({ delay: 1100, content: \"一个可爱的蓝孩子~\" }).then(function () { botui.action.button({ delay: 1600, action: [{ text: \"然后呢？ 😃\", value: \"sure\" }, { text: \"少废话！ 🙄\", value: \"skip\" }] }).then(function (a) { \"sure\" == a.value && sure(); \"skip\" == a.value && end() }) }) }) }); var sure = function () { botui.message.add({ delay: 600, content: \"😘\" }).then(function () { secondpart() }) }, end = function () { botui.message.add({ delay: 600, content: \"![...](https://view.moezx.cc/images/2018/05/06/a1c4cd0452528b572af37952489372b6.md.jpg)\" }) }, secondpart = function () { botui.message.add({ delay: 1500, content: \"目前就读于上海财经大学\" }).then(function () { botui.message.add({ delay: 1500, content: \"向往技术却误入商科，但后来喜欢上了经济学…\" }).then(function () { botui.message.add({ delay: 1200, content: \"因为数据分析也需要Coder嘛\" }).then(function () { botui.message.add({ delay: 1500, content: \"主攻 R 语言和 Python，略懂 STATA，偶尔也折腾 HTML/CSS/JavaScript/PHP\" }).then(function () { botui.message.add({ delay: 1500, content: \"研究的方向，是经济/金融方向的数据分析（data science）以及机器学习（machine learning）\" }).then(function () { botui.message.add({ delay: 1800, content: \"喜欢画画，希望有一天能够被称为画师\" }).then(function () { botui.action.button({ delay: 1100, action: [{ text: \"为什么叫Mashiro呢？ 🤔\", value: \"why-mashiro\" }] }).then(function (a) { thirdpart() }) }) }) }) }) }) }) }, thirdpart = function () { botui.message.add({ delay: 1E3, content: \"Mashiro以及站名都来自一部动画，因为和主角有一样的爱好~ 如果有兴趣可以找找首页上的视频~\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"为什么是白猫呢？ 🤔\", value: \"why-cat\" }] }).then(function (a) { fourthpart() }) }) }, fourthpart = function () { botui.message.add({ delay: 1E3, content: \"因为对GitHub有种执念… \" }).then(function () { botui.message.add({ delay: 1100, content: \"而且我真的是猫控！\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"域名有什么含意吗？(ง •_•)ง\", value: \"why-domain\" }] }).then(function (a) { fifthpart() }) }) }) }, fifthpart = function () { botui.message.add({ delay: 1E3, content: \"emmmm，看备案信息你就知道了=.= 本来想要zheng.xin的，但50万真买不起。。\" }).then(function () { botui.message.add({ delay: 1600, content: \"那么，仔细看看我的博客吧？ ^_^\" }) }) } } bot_ui_ini()","keywords":"关于"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"comment/index.html","permalink":"https://306714577.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"bangumi/index.html","permalink":"https://306714577.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"client/index.html","permalink":"https://306714577.github.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"links/index.html","permalink":"https://306714577.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"lab/index.html","permalink":"https://306714577.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"music/index.html","permalink":"https://306714577.github.io/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"rss/index.html","permalink":"https://306714577.github.io/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://306714577.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-06-01T14:21:46.000Z","comments":true,"path":"tags/index.html","permalink":"https://306714577.github.io/tags/index.html","excerpt":"","text":""},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"donate/index.html","permalink":"https://306714577.github.io/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-06-01T14:21:46.000Z","comments":false,"path":"video/index.html","permalink":"https://306714577.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"读取文件信息作为视频播放起始时间","slug":"读取文件信息作为视频播放起始时间","date":"2019-07-13T01:39:36.000Z","updated":"2019-07-23T05:31:02.108Z","comments":true,"path":"2019/07/13/读取文件信息作为视频播放起始时间/","link":"","permalink":"https://306714577.github.io/2019/07/13/读取文件信息作为视频播放起始时间/","excerpt":"","text":"需求为读取文件的创建时间作为视频的播放开始时间读取本地文件并获取文件信息QDate、QTime、QDateTime和QString的转换 时间转QString QDateTime dateTime = QDateTime::currentDateTime(); QString str = dateTime.toString(&quot;yyyy/mm/dd hh:mm:ss&quot;); //年月日 时分秒 如：2019-07-03 19:01:50 QString转时间 QString str = &quot;2019-07-03 19:01:50&quot;; QDateTime dateTime = QDateTime::fromString(str,&quot;yyyy-MM-dd hh:mm:ss&quot;); QDateTime、QDate、QTime 重载了&lt;,&gt;,可以用于比较时间 qint64 daysTo(const QDateTime &amp;) const; //比较天数差异 qint64 secsTo(const QDateTime &amp;) const; //比较秒数差异 qint64 msecsTo(const QDateTime &amp;) const; //比较毫秒数差异 int days = dEnd.daysTo(dStart); int secs= dEnd.secsTo(dStart); int msecs= dEnd.msecsTo(dStart); 源码void MainWindow::openFile() { QString file = QFileDialog::getOpenFileName(0, tr(&quot;Open a media file&quot;), Config::instance().lastFile()); if (file.isEmpty()) return; info.setFile(file); file_size = info.size(); //文件大小,单位byte file_created = info.created(); file_lastModified = info.lastModified(); file_lastRead = info.lastRead(); //QString str = file_lastModified.toString(); //创建、修改和访问时间,类型QTime create_time = QTime::fromString(file_created.toString().mid(9,8),&quot;hh:mm:ss&quot;); lastModified_time = QTime::fromString(file_lastModified.toString().mid(8,8),&quot;hh:mm:ss&quot;); lastRead_time = QTime::fromString(file_lastRead.toString().mid(9,8),&quot;hh:mm:ss&quot;); qDebug() &lt;&lt; &quot;------fileinfo------&quot; &lt;&lt; endl &lt;&lt; create_time &lt;&lt; endl &lt;&lt; lastModified_time &lt;&lt; endl &lt;&lt; lastRead_time &lt;&lt; endl; Config::instance().setLastFile(file); play(file); } 修改初始化播放时的时间数值修改初始的时间数值mpCurrent-&gt;setText(lastModified_time.toString(&quot;hh:mm:ss&quot;)); 修改结束的时间数值mpEnd-&gt;setText(lastModified_time.addMSecs(mpPlayer-&gt;mediaStopPosition()).toString(QString::fromLatin1(&quot;HH:mm:ss&quot;))); 修改播放时变化的时间数值//随着视频播放时，修改当前播放时间 void MainWindow::onPositionChange(qint64 pos) { if (mpPlayer-&gt;isSeekable()) mpTimeSlider-&gt;setValue(pos); QTime real_start = lastModified_time.addMSecs(pos); //qDebug() &lt;&lt; &quot;pos = &quot; &lt;&lt; pos &lt;&lt; &quot;,time = &quot;&lt;&lt; lastModified_time &lt;&lt; endl; mpCurrent-&gt;setText(real_start.toString(QString::fromLatin1(&quot;HH:mm:ss&quot;))); //setWindowTitle(QString::number(mpPlayer-&gt;statistics().video_only.currentDisplayFPS(), &#39;f&#39;, 2).append(&quot; &quot;).append(mTitle)); } 编写FileLoad类源码头文件 FileLoad.h #ifndef FILELOAD_H #define FILELOAD_H #include &lt;QFileInfo&gt; #include &lt;QDateTime&gt; #include &lt;QDate&gt; #include &lt;QTime&gt; class FileLoad { public: FileLoad(); void setInfo(QString &amp;file); void setStartTime(int); QTime getStartTime(); QFileInfo getInfo(); private: QFileInfo info; qint64 file_size; QDateTime file_created; QDateTime file_lastModified; QDateTime file_lastRead; QTime create_time; QTime lastModified_time; QTime lastRead_time; QTime startTime; }; #endif // FILELOAD_H Cpp文件：FileLoad.cpp #include &quot;fileload.h&quot; FileLoad::FileLoad() { } void FileLoad::setInfo(QString &amp;file){ info.setFile(file); file_size = info.size(); file_created = info.created(); file_lastModified = info.lastModified(); file_lastRead = info.lastRead(); create_time = QTime::fromString(file_created.toString().mid(9,8),&quot;hh:mm:ss&quot;); lastModified_time = QTime::fromString(file_lastModified.toString().mid(8,8),&quot;hh:mm:ss&quot;); lastRead_time = QTime::fromString(file_lastRead.toString().mid(9,8),&quot;hh:mm:ss&quot;); startTime = lastModified_time; return; } QFileInfo FileLoad::getInfo(){ return info; } void FileLoad::setStartTime(int r) { if(r == 0){ startTime = create_time; }else if(r == 1){ startTime = lastModified_time; }else if(r == 2){ startTime = lastRead_time; }else{ return; } } QTime FileLoad::getStartTime() { return startTime; } 类使用 MainWindow的OpenFile()函数 fileload.setInfo(file); fileload.setStartTime(1);//0-创建时间，1-修改时间，2-访问时间 播放时间的修改 onStartPlay() mpCurrent-&gt;setText(fileload.getStartTime().toString(&quot;hh:mm:ss&quot;)); mpEnd-&gt;setText(fileload.getStartTime().addMSecs(mpPlayer-&gt;mediaStopPosition()).toString(QString::fromLatin1(&quot;HH:mm:ss&quot;))); onPositionChange()函数，随时间变化的播放时间修改 QTime real_start = fileload.getStartTime().addMSecs(pos); mpCurrent-&gt;setText(real_start.toString(QString::fromLatin1(&quot;HH:mm:ss&quot;)));","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"QT","slug":"QT","permalink":"https://306714577.github.io/tags/QT/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]},{"title":"RedHat","slug":"RedHat","date":"2019-07-12T14:17:08.000Z","updated":"2019-07-12T16:19:16.558Z","comments":true,"path":"2019/07/12/RedHat/","link":"","permalink":"https://306714577.github.io/2019/07/12/RedHat/","excerpt":"","text":"RedHat v7.6 安装解决方案 一、UltraISO写入U盘镜像二、修改U盘文件信息由于U盘名称有长度限制，需要修改文件信息中的U盘名称，即将RHEL-7.4\\x20Server.x86_64改为RHEL或其它的短字符名称 进入 U盘名称/isolinux/ 找到下列文件 isolinux.cfg syslinux.cfg 记事本打开，ctrl + H 搜索并替换 hd:LABEL = …… rescue quiet 其中的……对应U盘名称，搜索 如 RHEL-7.4\\x20Server.x86_64 并全部替换为字符更短的名称 如 RHEL 三、选择界面按TAB键可以查看是否完成修改四、安装配置 软件源选择：带GUI的服务器-开发者工具 安装位置： 选择磁盘 自定义分区 \\boot 200MB \\swap 2048MB \\ 50GB不等 其他","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://306714577.github.io/tags/linux/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]},{"title":"MySQL","slug":"MySQL","date":"2019-07-12T14:15:23.000Z","updated":"2019-07-12T16:19:04.547Z","comments":true,"path":"2019/07/12/MySQL/","link":"","permalink":"https://306714577.github.io/2019/07/12/MySQL/","excerpt":"","text":"MySQL 学习笔记计划 如何使用终端操作 如何使用可视化工具操作 如何在编程语言中操作数据库 第一章：终端打开MySQLMacOS下 terminal下打开Mysql: cd /usr/local/mysql/bin ls ./mysql -u root -p 添加环境变量,便于使用 touch .bash_profile 创建用户环境变量文件 vim .bash_profile 编辑内容，在最后面部分添加 PATH=$PATH:/usr/local/mysql/bin 添加完成后，按esc键，然后输入:wq (shift+z double)进行保存退出。 在主目录 ～ 生效环境变量 source ~/.bash_profile 以后打开只需要在terminal mysql -u root -p 第二章：数据库基本操作 登陆数据库 (mysql -u -p)source ~/.bash_profilemysql -u root -p 查看数据库服务器上的所有数据库 或 数据库中的数据表 (show)show databases;show databases; 如何选中并操作某个数据库 (use) use sys; mysql&gt; select * from 2017_students where 序号 &lt; 10 limit 5; +--------+-------------+-----------+--------+ | 序号 | 学号 | 姓名 | 性别 | +--------+-------------+-----------+--------+ | 1 | 20155093126 | 夏滨洲 | 男 | | 2 | 20175083029 | 柳露露 | 女 | | 3 | 20175085042 | 李晓博 | 女 | | 4 | 20175101001 | 陈浩鹏 | 男 | | 5 | 20175101002 | 杨德森 | 男 | +--------+-------------+-----------+--------+ 5 rows in set (0.01 sec) 登陆用户数据库服务器(root) -&gt; 选择数据库(sys) -&gt; 选择数据表(2017_students) 如何创建数据库 (create)CREATE DATABASE test;show databases; 如何创建数据表 (create) CREATE TABLE pet( name VARCHAR(20), owner VARCHAR(20), sex CHAR(1) ); 如何删除数据表 (DROP)DROP TABLE users; 查看数据表结构 (desc 或 describe) mysql&gt; describe pet; +-------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +-------+-------------+------+-----+---------+-------+ | name | varchar(20) | YES | | NULL | | | owner | varchar(20) | YES | | NULL | | | sex | char(1) | YES | | NULL | | +-------+-------------+------+-----+---------+-------+ 3 rows in set (0.01 sec) 如何退出数据库服务器 (exit)exit 增删改查(INSERT INTO) 增 INSERT INTO pet VALUES(&quot;James&quot;,&quot;RJman&quot;,&quot;m&quot;); INSERT INTO pet VALUES(&quot;Tom&quot;,&quot;Lee&quot;,&quot;m&quot;); INSERT INTO pet VALUES(&quot;Jery&quot;,&quot;Joe&quot;,&quot;f&quot;); INSERT INTO pet VALUES(&quot;Mark&quot;,&quot;Sun&quot;,&quot;f&quot;); 删 DELETE FROM pet WHERE owner = &#39;RJman&#39;; 改 UPDATE pet SET name = &quot;Jack&quot; WHERE OWNER = &quot;Joe&quot;; 查 SELECT * FROM pet; 第四章：MySQL常用数据字段类型常用数据类型_菜鸟教程 数值 整数型(字节) TINEINT(1)、SMALLINT(2)、MEDIUMINT(3)、INT/INTEGER(4)、BIGINT(8) 浮点数(字节) FLOAT(4)、DOUBLE(8)、DECIMAL 日期/时间(字节) DATE 3 YYYY-MM-DD 日期值 TIME 3 HH:MM:SS 时间值或持续时间 YEAR 1 YYYY 年份值 DATETIME YYYY-MM-DD HH:MM:SS 混合 TIMESTAMP 4 时间戳 字符串类型 CHAR 定长字符串 VARCHAR 变长字符串 TINYBLOB 短二进制字符串 MEDIUMBLOB 中长进制字符串 BLOB 长二进制字符串 LONGBLOB 极长二进制字符串 TINYTEXT 短文本 MEDUIMTEXT 中长文本 TEXT 长文本 LONGTEXT 极长文本 第五章：MySqL建表约束 主键约束(primary key) 能够唯一确定一张表中的一条记录，字段值不重复且不为空(NULL) 联合主键：主键为多个字段，要求字段值不同时重复或为空(NULL) CREATE TABLE users( id int, name VARCHAR(20), PRIMARY KEY(id) ); mysql&gt; describe users; +-------+-------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +-------+-------------+------+-----+---------+-------+ | id | int(11) | NO | PRI | NULL | | | name | varchar(20) | YES | | NULL | | +-------+-------------+------+-----+---------+-------+ 2 rows in set (0.00 sec) 建表后添加和删除主键约束 (ALTER) --- 添加主键 add ALTER TABLE pet add PRIMARY KEY(name); desc pet; --- 删除主键 drop ALTER TABLE pet DROP PRIMARY KEY; desc pet; --- 修改字段 modify ALTER TABLE pet MODIFY name VARCHAR(20) PRIMARY KEY; 自增约束(auto_increment) 添加记录时,当设定的自增字段没有传入值时，可以自增 外键约束 涉及到两个表(父表,子表 或 主表,副表) --- 主表room CREATE TABLE room( id int PRIMARY KEY, building int ); --- 副表users CREATE TABLE users( id int PRIMARY KEY, name VARCHAR(20), dormitory int, FOREIGN KEY(dormitory) REFERENCES room(id) ); 副表的字段内容参照主表,则副表无法使用主表不存在的值 主表中的记录被副表引用,则主表记录不能被删除 无法创建外键的原因: 字段类型或大小是否严格一致 试图设置外键的字段没有建立起索引，或者不是一个primary key（主键） 检查表的引擎类型是否一致 外键的名字不能重复 可能设置为外键设置了一个默认值，如default=0 语法错误等… 唯一约束(unique) 修饰的字段值不能重复 当多个字段添加唯一约束时,类似联合主键，字段值不能同时重复 ALTER TABLE pet MODIFY name VARCHAR(20) UNIQUE; 删除唯一约束 ALTER TABLE pet drop index owner; 非空约束 修饰的字段值不能为空(NULL) ALTER TABLE pet MODIFY name VARCHAR(20) not null; 注意 当没有创建主键约束时，若对已经添加唯一约束的字段添加非空约束 则该字段自动升级为主键约束 默认约束 当插入字段值时，如果没有传值，则会使用默认值 CREATE TABLE users(age int default 0); 第六章：数据库的三大设计范式 第一范式 1NF 数据表中所有字段都是不可分割的原子值域 如地址字段，若其内容客观上还可以分割，不符合第一范式 第二范式 2NF 前提：满足第一范式 除主键外的每一列都必须完全依赖于主键 如果不完全依赖，只可能发生在联合主键的情况 如订单表 create table myorder( product_id INT, customer_id INT, product_name varchar(20), customer_name varchar(20), PRIMARY KEY(product_id,customer_id) ); —问题？—除主键外其它列，主依赖于主键的部分字段—解决方法-&gt;拆表 create table myorder( order_id INT PRIMARY KEY, product_id INT, customer_id INT ); CREATE TABLE product( id INT PRIMARY KEY, name VARCHAR(20) ); CREATE TABLE customer( id INT PRIMARY KEY, name VARCHAR(20) ); 第三范式 3NF 前提：满足第二范式 除开主键外的其它列不能有传递依赖关系(删除冗余) 第一范式1NF：字段不可分割第二范式2NF：1NF+除主键外其他列完全依赖主键第三范式3NF：2NF+除主键外其它列不能有传递依赖关系 第七章：数据库查询练习第一部分: \bAND,OR,IN 关系运算DISTINCT,LIKE 去重、相似字符max,sum,count,year(now()) 基础函数部分ASC、DESC 排序子查询第二部分: 创建源数据表 数据准备源码 student学生表(Sno,Sname,Ssex,S) CREATE TABLE student( Sno VARCHAR(20) PRIMARY KEY, Sname VARCHAR(20) NOT NULL, Ssex VARCHAR(10) NOT NULL, Sbirth DATETIME, Sclass VARCHAR(20) ); teacher教师表(Tno,Tname,Tsex,Tbirth,T,Tdept) CREATE TABLE teacher( Tno VARCHAR(20) PRIMARY KEY, Tname VARCHAR(10) NOT NULL, Tsex VARCHAR(10) NOT NULL, Prof VARCHAR(20) NOT NULL, Tdept VARCHAR(20) NOT NULL ); course课程表(Cno,Cname,Tno) CREATE TABLE course( Cno VARCHAR(20) PRIMARY KEY, Cname VARCHAR(20) NOT NULL, Tno VARCHAR(20) NOT NULL, FOREIGN KEY(Tno) REFERENCES teacher(Tno) ); score成绩表(Sno,Cno,Grade) CREATE TABLE score( id int PRIMARY KEY, Sno VARCHAR(20), Cno VARCHAR(20) NOT NULL, Grade DECIMAL, FOREIGN KEY(Sno) REFERENCES student(Sno), FOREIGN KEY(Cno) REFERENCES course(Cno) ); 基础查询 查询出生在1990-2000年之间的学生 (BETWEEN、AND) SELECT * from student WHERE Date(Sbirth) BETWEEN &#39;1990-01-01&#39; AND &#39;2000-01-01&#39;; +-----+-------+------+---------------------+--------+ | Sno | Sname | Ssex | Sbirth | Sclass | +-----+-------+------+---------------------+--------+ | 101 | RJman | m | 1999-06-18 00:00:00 | rg | | 102 | Joe | m | 1999-02-02 00:00:00 | xg | | 103 | Lee | m | 1998-05-06 00:00:00 | xg | | 104 | Sun | m | 1997-07-18 00:00:00 | xg | | 666 | ZTZ | f | 1991-09-15 00:00:00 | bzmh | +-----+-------+------+---------------------+--------+ 5 rows in set (0.00 sec) 查询班级在xg,rg的学生数量 (IN) SELECT count(*) FROM student WHERE Sclass in(&#39;xg&#39;,&#39;rg&#39;); 查询Head系和Tail系的教师 (OR) SELECT * FROM teacher WHERE Tdept = &#39;Head&#39; OR Tdept = &#39;Tail&#39;; 查询所有班级即不重复的班级值 (DISTINCT),去重复值 SELECT DISTINCT Sclass FROM student; +--------+ | Sclass | +--------+ | rg | | xg | | bzmh | +--------+ 3 rows in set (0.00 sec) 查询学生姓名并设定当前年份为其出生年份 (YEAR(NOW())) SELECT Sname,YEAR(NOW()) as BirthYear FROM student; 查询学生获得的总分数和 (sum) SELECT sum(Grade) as 总分数 FROM course; 查询student数据表中男生的数量 (count) SELECT count(*) as 男生数量 FROM student WHERE Ssex = &#39;m&#39;; 查询Sname包含_字符的记录 (LIKE,*,%,) SELECT * from student WHERE Sname like &#39;%\\_%&#39;; 以Sno学号升/降序的方式查询student数据表 (ASC,DESC) SELECT * FROM student ORDER BY Sno ASC; SELECT * FROM student ORDER BY Sno DESC; 以Sage年龄升序、Sno学号降序来查询student数据表 (优先级)ASC作为默认值一般可不写,但在使用两个字段以上排序时必须要写 SELECT * FROM student ORDER BY Sname ASC,Sno DESC; 查询出生年份最大的学生学号和姓名 (子查询或者排序) 1. 子查询 SELECT Sno,Sname FROM student WHERE Sbirth = Date((SELECT max(Date(Sbirth)) FROM student)); 2. 排序 SELECT Sno,Sname FROM student ORDER BY Sbirth DESC LIMIT 0,1; +-----+-------+ | Sno | Sname | +-----+-------+ | 101 | RJman | +-----+-------+ 进阶查询 查询score表中所有学生的平均成绩 (GROUP BY) SELECT Sno,avg(Grade) as 平均成绩 FROM score GROUP BY Sno; +------+--------------+ | Sno | 平均成绩 | +------+--------------+ | 101 | 92.3333 | | 102 | 78.0000 | | 103 | 78.6667 | | 104 | 69.0000 | | 206 | 92.6667 | | 266 | 75.6667 | | 666 | 76.6667 | +------+--------------+ 7 rows in set (0.00 sec) 查询至少有两名学生考试并且课程号是以3结尾的课程平均分数 SELECT Cno,avg(Grade),count(*) FROM score GROUP BY Cno HAVING count(Cno) &gt;= 2 AND Cno LIKE &#39;%3&#39;; +------+------------+----------+ | Cno | avg(Grade) | count(*) | +------+------------+----------+ | 0-03 | 74.5714 | 7 | +------+------------+----------+ 1 row in set (0.00 sec) 多表查询 ---多表查询,查询student 和 score表的Sname,Cno,Grade SELECT Sname,Cno,Grade FROM student,score WHERE student.Sno = score.Sno; ---多表查询,查询student 和 score表的Sno,Cname,Grade SELECT Sno,Cname,Grade FROM course,score WHERE course.Cno = score.Cno; ---多表查询,查询所有学生的Sname,Cname,Grade SELECT Sname,Cname,Grade FROM student,score,course WHERE student.Sno = score.Sno AND course.Cno = score.Cno; +-------+---------+-------+ | Sname | Cname | Grade | +-------+---------+-------+ | RJman | Russian | 99 | | Joe | Russian | 88 | | Lee | Russian | 81 | | Sun | Russian | 84 | | WNM | Russian | 96 | | ZQD | Russian | 86 | | ZTZ | Russian | 78 | | RJman | English | 88 | | Joe | English | 69 | | Lee | English | 79 | | Sun | English | 64 | | WNM | English | 99 | | ZQD | English | 67 | | ZTZ | English | 89 | | RJman | Chinese | 90 | | Joe | Chinese | 77 | | Lee | Chinese | 76 | | Sun | Chinese | 59 | | WNM | Chinese | 83 | | ZQD | Chinese | 74 | | ZTZ | Chinese | 63 | +-------+---------+-------+ 21 rows in set (0.00 sec) 查询’xg’班学生每门课的平均分 SELECT * FROM student WHERE Sclass = &#39;xg&#39;; SELECT Sno FROM student WHERE Sclass = &#39;xg&#39;; ---子查询结合分组 SELECT Cno,avg(Grade) FROM score WHERE Sno IN(SELECT Sno FROM student WHERE SClass = &#39;xg&#39;) GROUP BY Cno; 查询选修’0-01’课程的成绩高于’101’号学生’0-01’成绩的所有同学记录 SEL","categories":[{"name":"笔记","slug":"笔记","permalink":"https://306714577.github.io/categories/笔记/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://306714577.github.io/tags/MySQL/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://306714577.github.io/categories/笔记/"}]},{"title":"LinuxOrder","slug":"LinuxOrder","date":"2019-07-12T14:13:26.000Z","updated":"2019-07-12T16:18:44.024Z","comments":true,"path":"2019/07/12/LinuxOrder/","link":"","permalink":"https://306714577.github.io/2019/07/12/LinuxOrder/","excerpt":"","text":"linux命令行学习MD语法 第一章：目录结构 / Linux根目录/home /bin /etc /lib /cdrom /dev /… home 用户文件夹 bin 应用程序执行文件 ect 配置文件 lib 外部库 cdrom 光盘及驱动器文件 dev 设备文件 … 其它 / MacOS下根目录/Users /Application /System /Library Users 用户文件夹 Application 应用程序 System 系统 Library 资源库 第二章：常用命令 ls 列出目录下文件 pwd 查看当前所处的目录 print work directory 打印当前目录 cd 跳转目录 change directory touch 创建文件 linux目录结构中没有后缀之分,只有文件名 Windows中有exe,txt的后缀名 mkdir 创建文件夹 clear 清屏 第三章：linux命令概述linux命令格式(命令、选项、参数) command [-options] [parameter1] ... 命令 + 参数 ls 默认显示当前文件夹路径 ls / 显示根目录 ls /bin 显示路径下的文件 命令 + 选项 ls -a 显示所有(隐藏)文件 ls -l 显示文件细节(列表) ls -h 用合适的单位显示文件大小(直接使用无作用) ls -l -h (显示文件信息时使用可以得到恰当的显示) ls -l -h -a \b参数先后顺序任意,没有要求 -alh /bin 查看命令 ls –help 查看帮助 man ls 按q退出,f翻页,b返回,方向键控制 man 2 printf 命令帮助 Manual: linux提供的手册,包含绝大部分命令和函数的使用说明章节-&gt; 1. Standard commands 标准命令 2. System calls 系统调用 -&gt; open 3. Library Functions 库函数 -&gt; printf 4. Special Devices 设备文件说明(/dev下的各种设备) 5. File formats 文件格式 -&gt;passwd 6. Games and toys 游戏和娱乐 7. Miscellaneous 杂项 8. Administrative Commands 管理员命令 -&gt; ifconfig 拓展：linux命令touch .文件名 创建隐藏文件Tab按键 自动补全cat 文件名 查看文件内容hitory 查看历史命令!数字 直接执行命令(结合历史命令)","categories":[{"name":"笔记","slug":"笔记","permalink":"https://306714577.github.io/categories/笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://306714577.github.io/tags/Linux/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://306714577.github.io/categories/笔记/"}]},{"title":"hexo","slug":"hexo","date":"2019-07-12T14:10:23.000Z","updated":"2019-07-12T16:18:51.506Z","comments":true,"path":"2019/07/12/hexo/","link":"","permalink":"https://306714577.github.io/2019/07/12/hexo/","excerpt":"","text":"GitHub + Hexo 搭建个人博客站点配置文件和主题配置文件_config 站点配置文件# Hexo 站点配置文件 ## Docs: https://hexo.io/docs/configuration.html ## Source: https://github.com/hexojs/hexo/ # 网站配置 title: Hexo # 网站标题 subtitle: # 网站副标题 description: # 网站描述 author: John Doe # 你的昵称 language: # 网站使用的语言(英文:en, 简体中文:zh-Hans，繁体中文:zh-tw) timezone: # 网站时区，用于生成页面时填充相关时间，默认使用电脑时区，一般不用改 # URL ## 如果你的站点要放入子目录, 请将url设置为&#39;http://yoursite.com/child&#39; 并将根目录设置为&#39;/child/&#39; url: http://yoursite.com # 站点网址 root: / # 网站根目录 permalink: :year/:month/:day/:title/ #文单的永久链接格式 permalink_defaults: # 永久链接中各部分的默认值 # 目录 source_dir: source # 资源文件夹，这个文件夹用来存放博客内容 public_dir: public # 公共文件夹，这个文件夹用来存放生成的站点静态文件 tag_dir: tags # 标签文件夹 archive_dir: archives # 归档文件夹 category_dir: categories # 分类文件夹 code_dir: downloads/code # Include code文件夹 i18n_dir: :lang # 国际化文件夹，存放各种语言定义 skip_render: # 跳过指定文件的渲染 # 写作 new_post_name: :title.md # 新文章的文件名称 default_layout: post # 预设布局 titlecase: false # 把标题转换为 title case external_link: true # 在新标签中打开链接 filename_case: 0 # 把文件名称转换为 (1) 小写或 (2) 大写 render_drafts: false # 显示草稿 post_asset_folder: false # 启动 Asset 文件夹 relative_link: false # 把链接改为与根目录的相对位址 future: true # 显示未来的文章 highlight: # 代码块的设置 enable: true line_number: true auto_detect: false tab_replace: # 分类 &amp; 标签 default_category: uncategorized # 默认分类 category_map: # 分类别名 tag_map: # 标签别名 # 日期 / 时间格式 ## Hexo 使用 Moment.js 来解析和显示时间 ## http://momentjs.com/docs/#/displaying/format/ date_format: YYYY-MM-DD # 日期格式 time_format: HH:mm:ss # 时间格式 # 分页 ## 每页显示的文章量 (0 = 关闭分页功能) per_page: 10 pagination_dir: page # 扩展 ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape # 主题 # 部署 ## Docs: https://hexo.io/docs/deployment.html deploy: type: _config 主题配置文件根据不同的主题进行自定义 上传至Git Gitbash 进入本地目录 cd d:/workspace/hexo hexo clean 清空生成 hexo g 重新生成 hexo s 开启本地预览服务,预览 hexo d 上传到Git # _config.yml内的git设置: deploy: type: git repo: git@github.com:306714577/306714577.github.io.git branch: master # backup backup: type: git message: backup my blog of https://306714577.github.io/ repository: https://github.com/honjun/honjun.github.io.git,backup GitHub中打开仓库 根目录下新建文件：CNAME 输入域名并保存：rjman.top 访问域名rjman.top 访问域名www.rjman.top 访问域名306714577.github.io 写作配置本地资源文件夹设置 将 站点配置文件 中的 post_asset_folde 选项的值设置为 true 安装读取本地文件的插件 npm install https://github.com/CodeFalling/hexo-asset-image --save 当使用 hexo new title 创建文章时，将同时在 source/_post 文件夹中生成一个与 title 同名的资源文件夹","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://306714577.github.io/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]},{"title":"QTAV的编译","slug":"QTAV编译方法","date":"2019-07-12T08:36:01.812Z","updated":"2019-07-16T07:17:31.027Z","comments":true,"path":"2019/07/12/QTAV编译方法/","link":"","permalink":"https://306714577.github.io/2019/07/12/QTAV编译方法/","excerpt":"","text":"QTAV的编译本次编译采用如下环境windows 10 X64位 QT5.8.0-MSVC2016_x86-64位 相关文件下载地址[QTAV框架源码](https://github.com/wang-bin/QtAV) [下载FFMPEG](https://ffmpeg.zeranoe.com/builds/) + 第一项选择第一个版本 + 第二项选择windows-64位 + Static:这个版本只包含可执行程序，没有头文件和库文件 + Shared:这个版本包含了可执行程序和相关动态库文件 + Dev:开发版，这个包含了头文件和库文件 + 第三项下载Shared和Dev两个版本 编译开始配置ffmpeg类库 此处选择将ffmpeg类库直接编译集成到QT目录,这样可以免去以后添加库路径的步骤（也可以编译到其他路径，以添加配置的形式，参照该博客） 在D:\\Qt\\Qt5.8.0\\5.8\\msvc2015_64路径下，解压下载的ffmpeg包，分别将include、lib、bin目录下的文件拷贝到对应目录 编译源码 解压QTAV源码，以C:\\Users\\LuoSE\\Desktop\\QtAV-master路径为例 QT中打开目录下的QTAV.pro，配置项目的构建路径为C:\\Users\\LuoSE\\Desktop\\QtAV-master（同级目录），Release下会自动编译刚刚添加的ffmpeg文件，等待构建结束后，到QTAV文件夹下找到sdk_install.bat并运行 如果无误，那么D:\\Qt\\Qt5.8.0\\5.8\\msvc2015_64\\include路径下会生成QTAV和QTAVwidgets文件夹 运行QTAV编译运行子项目player，成功运行播放器","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"QT","slug":"QT","permalink":"https://306714577.github.io/tags/QT/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2019-07-12T05:50:55.100Z","updated":"2019-07-12T16:18:21.777Z","comments":true,"path":"2019/07/12/Hexo-Theme-Sakura/","link":"","permalink":"https://306714577.github.io/2019/07/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"test","slug":"test","permalink":"https://306714577.github.io/tags/test/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]},{"title":"Hexo新建博客","slug":"hello-world","date":"2019-07-12T05:50:55.027Z","updated":"2019-07-12T16:17:49.249Z","comments":true,"path":"2019/07/12/hello-world/","link":"","permalink":"https://306714577.github.io/2019/07/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://306714577.github.io/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://306714577.github.io/categories/技术/"}]}]}